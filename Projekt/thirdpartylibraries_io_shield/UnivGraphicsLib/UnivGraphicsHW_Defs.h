//*******************************************************************************//*	//*	UnivGraphicsLib//*	(C) by Mark Sproul//*	//*	This code is open source like the rest of the arduino source code//*	//*		UnivGraphicsLib is an attempt to unify the various graphics cards//*		available for the Arduino platform.//*	//*		The intent of this library is to abstract the graphics routines from//*		the hardware routines, In that end, it will require only a few routines//*		to get a new graphics card up and running.//*	//*		This is the file that defines the capibilites of the harware//*		It also defines what features the user wants turned on or off//*	//*******************************************************************************//*	ONE of these must be define  (UGL=UniversalGrphicsLibrary)//*		#define	_UGL_HARDWARE_FULL_COLOR_	(both 16 bit and 24 bit color)//*		#define	_UGL_HARDWARE_8BIT_//*		#define	_UGL_HARDWARE_1BIT_//*******************************************************************************//#include	"UnivGraphicsHW_Defs.h"#ifndef _UNIV_GRAPHICS_DEFS_H_#define	_UNIV_GRAPHICS_DEFS_H_//*******************************************************************************//*	this defines which graphics display is being used//*	only ONE of these can be dfined at a time//*	Graphic devices I am working with and that this code has been tested on//*			Picaso uVGA from sparkfun					8 bit color//*			GLCD from Adafruit (ks0108 LCD driver)		1 bit B/W (pinout B)//*			LCD-0022 Graphic LCD Module 128x64 NKC		1 bit B/W (pinout A)//*******************************************************************************#if defined(__AVR__) && defined(__AVR_ATmega328P__)	#define	_GRAPHICS_HW_GLCD_T6963C_#elif defined(__AVR__) && defined(PORTB) && defined(PORTC) && defined(PORTD)//	#define	_GRAPHICS_HW_NOIKA128_//	#define	_GRAPHICS_HW_GLCD_T6963C_	#define	_GRAPHICS_HW_KS0108_//	#define	_GRAPHICS_HW_WIDE_TFT_//	#define	_GRAPHICS_HW_PICASO_VGA_#endif//*******************************************************************************#if defined(_BOARD_MIKROE_MIKROMEDIA_)	#define	_GRAPHICS_HW_MikromediaPic32_#endif//*******************************************************************************#if defined(_BOARD_MIKROE_MULTIMEDIA_)	#define	_GRAPHICS_HW_MikromediaPic32_#endif//*******************************************************************************#if defined(_BOARD_MEGA_)	#define	_GRAPHICS_HW_NOIKA128_//	#define	_GRAPHICS_HW_WIDE_TFT_#endif//*******************************************************************************#if defined(_BOARD_UNO_)	#define	_GRAPHICS_HW_NOIKA128_//	#define	_GRAPHICS_HW_WIDE_TFT_#endif//*******************************************************************************	#if defined(_GRAPHICS_HW_KS0108_) && defined(_GRAPHICS_HW_PICASO_VGA_)		#error	ONLY one hardware device at a time	#endif//*******************************************************************************#define	_ENABLE_PROCESSING_ROUTINES_#define	_ENABLE_QUICKDRAW_ROUTINES_#ifdef _ENABLE_QUICKDRAW_ROUTINES_	#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)		//*	not enough memory on the non-mega board		//*	the hershey routines use the quickdraw routines	//	#define	_ENABLE_HERSHEY_FONTS_	#endif#endif//*******************************************************************************//*	these defines tell the main library what the capibilites of the //*	hardware are.//*******************************************************************************//*******************************************************************************#ifdef _GRAPHICS_HW_GLCD_T6963C_	#define	_UGL_HARDWARE_1BIT_	#define	_MONOCHROME_BLACK_ON_WHITE_//	#define	_MONOCHROME_WHITE_ON_BLACK_		#define	kGLD_T6963C_width	160	#define	kGLD_T6963C_height	128	#ifndef __MWERKS__		#warning not finished yet	#endif	//	#define _HW_SUPPORTS_TEXT_#endif//*******************************************************************************#ifdef _GRAPHICS_HW_KS0108_	#define	_UGL_HARDWARE_1BIT_			#define	_MONOCHROME_BLACK_ON_WHITE_//	#define	_MONOCHROME_WHITE_ON_BLACK_	#endif//*******************************************************************************#ifdef _GRAPHICS_HW_PICASO_VGA_	//*	you can see here that the PICASO chip has lots of capiblities	//*	the more that the hardware can do, the quicker and probably smaller, the overall	//*	library will be.	#define	_UGL_HARDWARE_8BIT_	#define	_HW_SUPPORTS_8BITCOLOR_	#define	_HW_SUPPORTS_LINE_		#define	_HW_SUPPORTS_RECT_	#define	_HW_SUPPORTS_RECT_FILL_		#define	_HW_SUPPORTS_ELLIPSE_	#define	_HW_SUPPORTS_ELLIPSE_FILL_		#define	_HW_SUPPORTS_TRIANGLE_	#define	_HW_SUPPORTS_TRIANGLE_FILL_		#define	_HW_SUPPORTS_TEXT_		#define	_HW_SUPPORTS_BUTTONS_WITH_TEXT_		#endif//#define _DEBUG_VIA_SERIAL_#ifdef _DEBUG_VIA_SERIAL_	#ifndef HardwareSerial_h		#include	"HardwareSerial.h"	#endif#endif#ifdef __MWERKS__	#ifndef __PGMSPACE_H_		#define	__PGMSPACE_H_		#define	PROGMEM		#define prog_char char		char	pgm_read_byte(...);		char	pgm_read_word(...);		char	pgm_read_byte_near(...);		char	pgm_read_byte_far(...);	#endif		void	strcpy_P(...);#endif#endif	//	_UNIV_GRAPHICS_DEFS_H_