//*******************************************************************************//*	//*	UnivGraphicsLib//*	(C) by Mark Sproul//*	//*	This code is open source like the rest of the arduino source code//*	//*		UnivGraphicsLib is an attempt to unify the various graphics cards//*		available for the Arduino platform.//*	//*		The intent of this library is to abstract the graphics routines from//*		the hardware routines, In that end, it will require only a few routines//*		to get a new graphics card up and running.//*	this is the routines that the implementer provides//*******************************************************************************//#include	"UnivGraphicsHardware.h"	#ifndef _UNIV_GRAPHICS_H_	#include	"UnivGraphicsLib.h"#endif#ifdef __cplusplus	extern "C"{#endif//*	these MUST be implementedboolean	GrahicsHW_CheckIfPresent(void);	//*	returns TRUE if succesfullboolean	GrahicsHW_Init(void);			//*	returns TRUE if succesfullvoid	GrahicsHW_Reset(void);			//*	this does not have to do anythingshort	GrahicsHW_GetWidth(void);		//*	returns screen width (X direction)short	GrahicsHW_GetHeight(void);		//*	returns screen height (Y direction)void	GrahicsHW_EraseScreen();		//*	erases the entire screen	void	GrahicsHW_SetPixelRGB(short xLoc, short yLoc, RGBColor *theColor);	void	GrahicsHW_SetPixel(short xLoc, short yLoc, unsigned char the8BitColor);	void	GrahicsHW_Set8bitForeColor(unsigned char the8bitColor);	void	GrahicsHW_Set8bitBackColor(unsigned char the8bitColor);	void	GrahicsHW_DrawLine(short x1, short y1, short x2, short y2, unsigned char the8BitColor);	void	GrahicsHW_DrawLineRGB(short x1, short y1, short x2, short y2, RGBColor *theRGBcolor);		void	GrahicsHW_DrawRect(RECT *theRect, unsigned char the8BitColor);	void	GrahicsHW_FillRect(RECT *theRect, unsigned char the8BitColor);	void	GrahicsHW_DrawEllipse(RECT *theRect, unsigned char the8BitColor);	void	GrahicsHW_DrawEllipseRGB(RECT *theRect, RGBColor *rgbColor);	void	GrahicsHW_FillEllipse(RECT *theRect, unsigned char the8BitColor);	void	GrahicsHW_FillEllipseRGB(RECT *theRect, RGBColor *rgbColor);	void	GrahicsHW_DrawTriangle(short x1, short y1, short x2, short y2, short x3, short y3, unsigned char the8BitColor);	void	GrahicsHW_FillTriangle(short x1, short y1, short x2, short y2, short x3, short y3, unsigned char the8BitColor);	void	GrahicsHW_DrawChar(short xLoc, short yLoc, char theChar);	void	GrahicsHW_DrawText(short xLoc, short yLoc, char *textString);	//*	this needs to be modifed to include color etc	void	GrahicsHW_DrawButtonWtext(	short			xLoc,										short			yLoc,										unsigned char	buttonState,										unsigned char	buttonColor,										unsigned char	textColor,										char			*buttonText);#ifdef __cplusplus} // extern "C"#endif